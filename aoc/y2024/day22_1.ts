import AbstractRiddle from '../../src/JS/AbstractRiddle';
import Vector from "../../src/JS/Vector";




class Y2024_Day22_1 extends AbstractRiddle {

    riddle: string = "What is the sum of the 2000th secret number generated by each buyer?";

    run(input: string[]): string | number | bigint {

        const secretNumbers = input.map(line => BigInt(parseInt(line)));

        let sumOfEvolvedSecrets = BigInt(0);

        for (let s = 0; s < secretNumbers.length; s++) {
            let secret = secretNumbers[s];

            for (let i = 0; i < 2000; i++) {
                secret = this.evolveSecret(secret);
            }

            sumOfEvolvedSecrets += secret;
        }

        return sumOfEvolvedSecrets;
    }

    private evolveSecret(secret: bigint): bigint {

        const m1 = secret << 6n; // secret * 64n
        secret = secret ^ m1; // mix
        secret = secret & 16777215n; // prune

        const d1 = secret >> 5n; // secret / 32n
        secret = secret ^ d1; // mix
        secret = secret & 16777215n; // prune

        const m2 = secret << 11n; // secret * 2048n
        secret = secret ^ m2; // mix
        secret = secret & 16777215n; // prune

        return secret;
    }

}

// noinspection JSUnusedGlobalSymbols
export default (new Y2024_Day22_1());